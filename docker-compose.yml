services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - backend_db:/var/lib/postgresql/data
    networks:
      - backend_network

  minio:
    image: minio/minio:latest
    volumes:
      - backend_minio_data:/export
      - backend_minio_config:/root/.minio
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: server /export --console-address ":${MINIO_CONSOLE_PORT}"
    networks:
      - backend_network

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add myminio http://minio:${MINIO_PORT} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY}) do
        echo '...waiting...' && sleep 1;
      done;
      /usr/bin/mc mb myminio/${MINIO_BUCKET_NAME};
      /usr/bin/mc policy download myminio/${MINIO_BUCKET_NAME};
      exit 0;
      "
    networks:
      - backend_network

  valkey:
    image: valkey/valkey:8
    volumes:
      - backend_valkey:/data
    networks:
      - backend_network


networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge
  shared_network:
    driver: bridge

volumes:
  backend_db:
  backend_minio_data:
  backend_minio_config:
  backend_valkey:
